This is a generated file for the LaTeX (2e + expl3) validation system.
Don't change this file in any respect.
Author: Joseph Wright, Frank Mittelbach, Bruno Le Floch
============================================================
TEST 1: Arguments read up to first brace
============================================================
> \l_test_tl=(\bar )(1).
<recently read> }
l. ...}
> \l_test_tl=(100)(2).
<recently read> }
l. ...}
> \l_test_tl=(\bar )(1).
<recently read> }
l. ...}
> \l_test_tl=(100)(2).
<recently read> }
l. ...}
============================================================
============================================================
TEST 2: Various mandatory combinations
============================================================
> \foo=\protected macro:->\__cmd_start_expandable:nNNNNn {lm}\foo  \foo  \foo
code ?{\__cmd_expandable_grab_u:w \foo (arg 1) \__cmd_expandable_grab_m:w }.
<recently read> }
l. ...}
> \foo code=\protected\long macro:#1#2->(#1)(#2).
<recently read> }
l. ...}
> \foo=\protected macro:->\__cmd_start_expandable:nNNNNn {mlm}\foo  \foo  \foo
code ?{\__cmd_expandable_grab_m:w \__cmd_expandable_grab_u:w \foo (arg 2)
\__cmd_expandable_grab_m:w }.
<recently read> }
l. ...}
> \foo code=\protected\long macro:#1#2#3->(#1)(#2)(#3).
<recently read> }
l. ...}
> \foo=\protected macro:->\__cmd_start_expandable:nNNNNn {u{end}u{stop!}}\foo 
\foo  \foo code ?{\__cmd_expandable_grab_u:w \foo (arg 1)
\__cmd_expandable_grab_u:w \foo (arg 2) }.
<recently read> }
l. ...}
> \foo code=\protected\long macro:#1#2->(#1)(#2).
<recently read> }
l. ...}
> \foo=\protected macro:->\__cmd_start_expandable:nNNNNn {lll}\foo  \foo  \foo
code ?{\__cmd_expandable_grab_u:w \foo (arg 1) \__cmd_expandable_grab_u:w \foo
(arg 2) \__cmd_expandable_grab_u:w \foo (arg 3) }.
<recently read> }
l. ...}
> \foo code=\protected\long macro:#1#2#3->(#1)(#2)(#3).
<recently read> }
l. ...}
> \foo=\protected macro:->\__cmd_start:nNNnnn {+l>{\foo }u{end}}\foo  \foo
code {\__cmd_grab_l_long:w \__cmd_grab_u:w {end}}{}{{}{{\foo }}}.
<recently read> }
l. ...}
> \foo code=\protected\long macro:#1#2->(#1)(#2).
<recently read> }
l. ...}
============================================================
============================================================
TEST 3: Optional argument creation
============================================================
LaTeX3 Warning: Since the mandatory argument 'm' has the same delimiter '{' as
(LaTeX3)        a previous optional argument, it will not be possible to omit
(LaTeX3)        all optional arguments when calling this command.
> \foo=\protected macro:->\__cmd_start:nNNnnn {mgom}\foo  \foo code
{\__cmd_grab_m_1:w \__cmd_grab_G:w \__cmd_grab_D:w []\__cmd_grab_m_1:w }{}{}.
<recently read> }
l. ...}
> \foo code=\protected\long macro:#1#2#3#4->(#1)(#2)(#3)(#4).
<recently read> }
l. ...}
LaTeX3 Warning: Since the mandatory argument 'm' has the same delimiter '{' as
(LaTeX3)        a previous optional argument, it will not be possible to omit
(LaTeX3)        all optional arguments when calling this command.
> \foo=\protected macro:->\__cmd_start:nNNnnn {mG{test}sm}\foo  \foo code
{\__cmd_grab_m_1:w \__cmd_grab_G:w \__cmd_grab_t:w *\__cmd_grab_m_1:w
}{\c_novalue_tl {\prg_do_nothing: test}\c_novalue_tl \c_novalue_tl }{}.
<recently read> }
l. ...}
> \foo code=\protected\long macro:#1#2#3#4->(#1)(#2)(#3)(#4).
<recently read> }
l. ...}
============================================================
============================================================
TEST 4: Valid environment declarations
============================================================
> \environment foo=\protected macro:->\__cmd_start_env:nnnnn
{u{stop}om}{foo}{\__cmd_grab_u:w {stop}\__cmd_grab_D:w []\__cmd_grab_m_1:w
}{}{}.
<recently read> }
l. ...}
> \environment foo code=\protected\long macro:#1#2#3->\cs_set_nopar:Npx
\environment foo end aux {\exp_not:N \environment foo end aux  \exp_not:o
\l__cmd_args_tl }(#1)(#2)(#3).
<recently read> }
l. ...}
============================================================
============================================================
TEST 5: (ab)using xparse commands in csnames
============================================================
\test-test-abc 
\test-abc.{def} 
============================================================
============================================================
TEST 6: More variation of type with valid arguments
============================================================
LaTeX3 Warning: Since the mandatory argument 'm' has the same delimiter '{' as
(LaTeX3)        a previous optional argument, it will not be possible to omit
(LaTeX3)        all optional arguments when calling this command.
(-NoValue-)(-NoValue-)(a)
(text)(-NoValue-)(b)
(text)(opt)(text)
(d)(e)(default)
(d)(e)(text)
(d)(e)(text)
(g )(h)(i)
(j)(h)(e)
()(h)(e)
============================================================
============================================================
TEST 7: Variation of type with invalid arguments
============================================================
LaTeX3 Warning: Since the mandatory argument 'm' has the same delimiter '{' as
(LaTeX3)        a previous optional argument, it will not be possible to omit
(LaTeX3)        all optional arguments when calling this command.
Runaway argument?
{
! Paragraph ended before \foo  was complete.
<to be read again> 
\par 
l. ...}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.
! Extra }, or forgotten \endgroup.
<argument> ...\foo {gom}{\TYPE {(##1)(##2)(##3)}}\foo {\par }
                                                  bc\DeclareDocumentCommand ...
l. ...}
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.
Runaway argument?
{
! Paragraph ended before \foo  was complete.
<to be read again> 
\par 
l. ...}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.
! Extra }, or forgotten \endgroup.
<argument> ...efault}}{\TYPE {(##1)(##2)(##3)}}\foo de{\par }
                                                  \DeclareDocumentCommand \f...
l. ...}
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.
Runaway argument?
g hi
! Paragraph ended before \foo (arg 1) was complete.
<to be read again> 
\par 
l. ...}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.
Runaway argument?
j
! Paragraph ended before \foo (arg 1) was complete.
<to be read again> 
\par 
l. ...}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.
============================================================
============================================================
TEST 8: Expandable l/u arguments
============================================================
|{def}ghi|
|abc|{def}
! LaTeX3 Error: Argument type 'l' not available after optional argument for
(LaTeX3)        expandable command '\C'.
For immediate help type H <return>.
 ...                                              
l. ...  }
The letter 'l' specifies an argument type which cannot be used in an
expandable command after an optional argument.
LaTeX will ignore this entire definition.
! Undefined control sequence.
<write> \C 
   [abc]{def}
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
[abc]{def}
|abc||def|
============================================================
============================================================
TEST 9: Invalid signatures for expandable commands
============================================================
! LaTeX3 Error: Argument type 'G' not available for expandable command
(LaTeX3)        '\testA'.
For immediate help type H <return>.
 ...                                              
l. ...  }
The letter 'G' specifies an argument type which cannot be used in an
expandable command.
LaTeX will ignore this entire definition.
! LaTeX3 Error: Argument type 'l' not available after optional argument for
(LaTeX3)        expandable command '\testA'.
For immediate help type H <return>.
 ...                                              
l. ...  }
The letter 'l' specifies an argument type which cannot be used in an
expandable command after an optional argument.
LaTeX will ignore this entire definition.
! LaTeX3 Error: Argument type 'u' not available after optional argument for
(LaTeX3)        expandable command '\testA'.
For immediate help type H <return>.
 ...                                              
l. ...  }
The letter 'u' specifies an argument type which cannot be used in an
expandable command after an optional argument.
LaTeX will ignore this entire definition.
============================================================
