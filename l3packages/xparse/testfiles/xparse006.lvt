%
% Copyright (C) 2009-2020 LaTeX3 Project
%

\documentclass{minimal}
\input{regression-test}

\RequirePackage[enable-debug]{expl3}
\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff
\RequirePackage{xparse}

\begin{document}
\START
\AUTHOR{Joseph Wright, Frank Mittelbach, Bruno Le Floch}
\ExplSyntaxOn

\OMIT
\cs_new:Npn \xparse_show:N #1 {
  \cs_show:N #1
  \cs_show:c { \cs_to_str:N #1 ~code }
}
\cs_new:Npn \xparse_show_env:n #1 {
  \cs_show:c { environment~#1 }
  \cs_show:c { environment~#1~code }
}
\tl_new:N \l_test_tl
\TIMO
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST{Arguments~read~up~to~first~brace}{
  \OMIT
  \DeclareDocumentCommand \foo { l m } {
    \tl_set:Nn \l_test_tl { (#1) (#2) }
    \tl_show:N \l_test_tl
  }
  \TIMO
  \foo \bar {1}
  \foo 100  {2}
  \OMIT
  \DeclareDocumentCommand \foo { +l m } {
    \tl_set:Nn \l_test_tl { (#1) (#2) }
    \tl_show:N \l_test_tl
  }
  \TIMO
  \foo \bar

  {1}
  \foo 100

  {2}
}

\TEST{Various~mandatory~combinations}{
  \DeclareDocumentCommand \foo { l m } { (#1) (#2) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m l m } { (#1) (#2) (#3) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { u{end} u{stop!} } { (#1) (#2) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { l l l } { (#1) (#2) (#3) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { +l >{\foo}u{end} } { (#1) (#2) }
  \xparse_show:N \foo
}

\TEST{Optional~argument~creation}{
  \DeclareDocumentCommand \foo { m g o m } { (#1) (#2) (#3) (#4) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m G{test} s m } { (#1) (#2) (#3) (#4) }
  \xparse_show:N \foo
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST{Valid~environment~declarations}{
  \DeclareDocumentEnvironment { foo } { u{stop} o m }
    { (#1) (#2) (#3) } { (#1) (#2) (#3) }
  \xparse_show_env:n { foo }
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\TEST { (ab)using~xparse~commands~in~csnames }
  {
    \DeclareDocumentCommand { \foo } { u. } { test-#1 }
    \TYPE { \exp_not:c { test- \foo abc . } }
    \DeclareDocumentCommand { \foo } { l } { #1 . }
    \TYPE { \exp_not:c { test- \foo abc { def } } }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\TEST{More~variation~of~type~with~valid~arguments}{
  \DeclareDocumentCommand \foo { g o m } { \TYPE { (#1) (#2) (#3) } }
  \foo a b c
  \foo {text} b c
  \foo ~{text} [opt] {text}
  \DeclareDocumentCommand \foo { m m G{default} }
    { \TYPE { (#1) (#2) (#3) } }
  \foo d e f
  \foo d e {text}
  \foo d e~{text}
  \DeclareDocumentCommand \foo { l m m } { \TYPE { (#1) (#2) (#3) } }
  \foo g~ {h} i
  \DeclareDocumentCommand \foo { u{stop} m m }
    { \TYPE { (#1) (#2) (#3) } }
  \foo jstophere
  \foo stophere
}

\TEST{Variation~of~type~with~invalid~arguments}{
  \DeclareDocumentCommand \foo { g o m } { \TYPE { (#1) (#2) (#3) } }
  \foo {\par} b c
  \DeclareDocumentCommand \foo { m m G{default} }
    { \TYPE { (#1) (#2) (#3) } }
  \foo d e {\par}
  \DeclareDocumentCommand \foo { l m m } { \TYPE { (#1) (#2) (#3) } }
  \foo g~ h i \par
  \DeclareDocumentCommand \foo { u{stop} m m }
    { \TYPE { (#1) (#2) (#3) } }
  \foo j \par
}

\TEST { Expandable~l/u~arguments }
  {
    \DeclareExpandableDocumentCommand { \A } { u{def} } { \exp_not:n { |#1| } }
    \TYPE { \A {def} ghi def }
    \DeclareExpandableDocumentCommand { \B } { l } { \exp_not:n { |#1| } }
    \TYPE { \B abc { def } }
    \DeclareExpandableDocumentCommand { \C } { o l m } { \exp_not:n { |#1|#2|#3| } }
    \TYPE { \C [abc]{def} }
    \DeclareDocumentCommand { \D } { o l m } { \TYPE { |#1|#2|#3| } }
    \D [abc]{def}
  }

\TEST { Invalid~signatures~for~expandable~commands }
  {
    \NewExpandableDocumentCommand { \testA } { g } { }
    \NewExpandableDocumentCommand { \testA } { o l } { }
    \NewExpandableDocumentCommand { \testA } { o u { + } } { }
  }

\END
